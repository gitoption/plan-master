{"version":3,"sources":["components/navbar.component.js","components/shortplanlist.component.js","components/longplanlist.component.js","components/addplans.component.js","components/todolist.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","data-toggle","data-target","id","to","ShortPlanList","useState","shortplans","setShortplans","open","setOpen","useEffect","axios","get","then","res","data","reverse","catch","err","console","log","selected","onChange","e","filter","map","title","details","progress","plandate","substring","startdate","deadline","LongPlanList","longplans","setLongplans","AddPlans","username","setUsername","type","setType","Date","setStartdate","setDeadline","duration","setDuration","setTitle","setDetails","setProgress","onSubmit","preventDefault","plans","post","window","location","value","target","required","min","rows","cols","todolist","setTodolist","App","path","exact","component","Todos","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.23e9b0ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.js';\r\nimport 'jquery/dist/jquery.min.js';\r\n\r\n\r\nexport default function Navbar (){\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <a href=\"/plan-master/\" className=\"navbar-brand\">tradecoder</a>\r\n                </div>\r\n                <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#main-menu\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div id=\"main-menu\" className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\"><Link to = \"/plan-master/\" className=\"nav-link\">Set Plans</Link></li>\r\n                        <li className=\"nav-item\"><Link to = \"/plan-master/shortplan/\" className=\"nav-link\">Short Term Plan</Link></li>\r\n                        <li className=\"nav-item\"><Link to =\"/plan-master/longplan/\" className=\"nav-link\">Long Term Plan</Link></li>\r\n                        <li className=\"nav-item\"><Link to =\"/plan-master/todos/\" className=\"nav-link\">Todos</Link></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n        </nav>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default function ShortPlanList(){\r\nconst [shortplans, setShortplans] =  useState([]);\r\nconst [open, setOpen]= useState(true);\r\nuseEffect(()=>{\r\n\r\n    axios.get('http://localhost:5000/shortplan')\r\n    .then(res=>{\r\n        setShortplans(res.data.reverse());\r\n    })\r\n    .catch(err=>console.log(err))\r\n});\r\n\r\nfunction onChangeOpen(e){\r\n    setOpen(open===true?false:true);\r\n\r\n};\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <select selected={open} onChange={onChangeOpen} className=\"form-control\">\r\n                        <option>Open plans</option>\r\n                        <option>Closed plans</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {shortplans.filter(e=>e.open=open).map(e=>{\r\n                    return (\r\n                        \r\n                        <div className=\"shadow p-3\">                                        \r\n                            <h4 className=\"text-primary\">{e.title}</h4>\r\n                            <p>{e.details}</p>\r\n                            <p>Progress: {e.progress}</p>\r\n                            <p>Open date: {e.plandate?e.plandate.substring(0,10):e.plandate}, \r\n                            Start Date: {e.startdate?e.startdate.substring(0,10):e.startdate}, Deadline: {e.deadline?e.deadline.substring(0,10):e.deadline} </p>            \r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default function LongPlanList(){\r\nconst [longplans, setLongplans] =  useState([]);\r\nconst [open, setOpen]= useState(true);\r\nuseEffect(()=>{\r\n\r\n    axios.get('http://localhost:5000/longplan')\r\n    .then(res=>{\r\n        setLongplans(res.data.reverse());\r\n    })\r\n    .catch(err=>console.log(err))\r\n});\r\n\r\nfunction onChangeOpen(e){\r\n    setOpen(open===true?false:true);\r\n\r\n};\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <select selected={open} onChange={onChangeOpen} className=\"form-control\">\r\n                        <option>Open plans</option>\r\n                        <option>Closed plans</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {longplans.filter(e=>e.open=open).map(e=>{\r\n                    return (\r\n                        \r\n                        <div className=\"shadow p-3\">                                        \r\n                            <h4 className=\"text-primary\">{e.title}</h4>\r\n                            <p>{e.details} </p>\r\n                            <p>Progress: {e.progress}</p>\r\n                            <p>Open date: {e.plandate?e.plandate.substring(0,10):e.plandate}, \r\n                            Start Date: {e.startdate?e.startdate.substring(0,10):e.startdate}, Deadline: {e.deadline?e.deadline.substring(0,10):e.deadline} </p>            \r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React, {useState} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nexport default function AddPlans(){\r\n\r\n    const [username, setUsername] =  useState(\"mamun\");\r\n    const [type, setType] =  useState(\"shortplan\");\r\n    const [startdate, setStartdate]= useState(new Date());\r\n    const [deadline, setDeadline] = useState(new Date());\r\n    const [open, setOpen] = useState(true);\r\n    const [duration, setDuration] = useState(1)\r\n    const [title, setTitle]= useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [progress, setProgress]= useState(\"\");\r\n\r\n    function onChangeUsername(e){\r\n        setUsername(e.target.value);\r\n    };\r\n    function onChangeType(e){\r\n        setType(e.target.value);\r\n    };\r\n\r\n    function onChangeStartdate(e){\r\n        setStartdate(e>=new Date()?e:new Date());\r\n        setDeadline(e);     \r\n    };\r\n    function onChangeDeadline(e){\r\n        setDeadline(e>= startdate?e:startdate);        \r\n    }\r\n    function onChangeOpen(e){\r\n        setOpen(e.target.value)\r\n    };\r\n    function onChangeDuration(e){\r\n        setDuration(e.target.value);\r\n    }\r\n    function onChangeTitle(e){\r\n        setTitle(e.target.value)\r\n    };\r\n    function onChangeDetails(e){\r\n        setDetails(e.target.value);\r\n    };\r\n    function onChangeProgress(e){\r\n        setProgress(e.target.value)\r\n    };\r\n    function onSubmitPlan(e){\r\n        e.preventDefault();\r\n        const plans={\r\n            username, type, startdate, duration, deadline, open, title, details, progress\r\n        }\r\n        axios.post(`http://localhost:5000/${type}/add`, plans)\r\n        .then(res=>{\r\n            \r\n            window.location=(`/plan-master/${type}`)})\r\n        .catch(err=>console.log(err));\r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <form onSubmit={onSubmitPlan}>\r\n                <div className=\"d-flex flex-wrap justify-content-between\">\r\n                        <div className=\"form-group\">\r\n                            <label>Username:</label>\r\n                            <input type=\"text\" className=\"form-control\" value={username} onChange={onChangeUsername} required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Plan type:</label>\r\n                            <select selected={type} onChange={onChangeType} className=\"form-control\" required>\r\n                                <option>shortplan</option>\r\n                                <option>longplan</option>\r\n                                <option>todos</option>\r\n                            </select>                           \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Plan duration:</label>\r\n                            <input type=\"number\" min=\"0\" className=\"form-control\" value={duration} onChange={onChangeDuration} required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Start date:</label><br/>\r\n                            <DatePicker selected ={startdate} onChange={onChangeStartdate} className=\"form-control\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Deadline:</label><br/>\r\n                            <DatePicker selected={deadline} onChange={onChangeDeadline} className=\"form-control\" required/>                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Open:</label>\r\n                            <select selected={open} onChange={onChangeOpen} className=\"form-control\" required>\r\n                                <option>true</option>\r\n                                <option>false</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label>Plan title:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={title} onChange={onChangeTitle} required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Plan details:</label>\r\n                        <textarea className=\"form-control\" rows=\"5\" cols=\"50\" value={details} onChange={onChangeDetails} required/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Progress:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={progress} onChange={onChangeProgress} required/>\r\n                    </div>                  \r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add plan</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axios from 'axios';\r\n\r\nexport default function ShortPlanList(){\r\nconst [todolist, setTodolist] =  useState([]);\r\nconst [open, setOpen]= useState(true);\r\nuseEffect(()=>{\r\n\r\n    axios.get('http://localhost:5000/todos')\r\n    .then(res=>{\r\n        setTodolist(res.data.reverse());\r\n    })\r\n    .catch(err=>console.log(err))\r\n});\r\n\r\nfunction onChangeOpen(e){\r\n    setOpen(open===true?false:true);\r\n\r\n};\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <select selected={open} onChange={onChangeOpen} className=\"form-control\">\r\n                        <option>Open tasks</option>\r\n                        <option>Closed tasks</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {todolist.filter(e=>e.open=open).map(e=>{\r\n                    return (\r\n                        \r\n                        <div className=\"shadow p-3\">                                        \r\n                            <h4 className=\"text-primary\">{e.title}</h4>\r\n                            <p>{e.details}</p>\r\n                            <p>Progress: {e.progress}</p>\r\n                            <p>Open date: {e.plandate?e.plandate.substring(0,10):e.plandate}, \r\n                            Start Date: {e.startdate?e.startdate.substring(0,10):e.startdate}, Deadline: {e.deadline?e.deadline.substring(0,10):e.deadline} </p>            \r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Navbar from './components/navbar.component.js';\r\nimport ShortPlanList from './components/shortplanlist.component.js';\r\nimport LongPlanList from './components/longplanlist.component.js';\r\nimport AddPlans from './components/addplans.component.js';\r\nimport Todos from './components/todolist.component.js';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <div className=\"p-4\">\r\n        <h6 className=\"text-center\">Plan master- a roadmap for ultimate goals</h6>     \r\n      </div>\r\n      <Route path='/plan-master/' exact component={AddPlans}></Route>\r\n      <Route path=\"/plan-master/shortplan/\" component={ShortPlanList}></Route>\r\n      <Route path=\"/plan-master/longplan/\" component={LongPlanList}></Route>\r\n      <Route path=\"/plan-master/todos/\" component={Todos}></Route>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}